// SimGui::TextEdit
// SimGui::SimpleText: Alignable, setValue()able
// SimGui::ScrollCtrl: scrollbox
// METextEdit
// MEButton
// FearGUI::FGBitmapCtrl: displays a PBMP, stretched to fit
// FearGUI::FGPaletteCtrl: force palette (good one = IDPAL_SHELL, use inspector to set)
// FearGUI::FGTextList: selection list

$MainWindow = MainWindow;
// $GuiEditor::lastControlID = incrementing counter (for autogenerated control IDs)

$GuiEditor::allControls = "SimGui::TextEdit SimGui::SimpleText SimGui::ScrollCtrl " @
	"FearGUI::FGBitmapCtrl FearGUI::FGPaletteCtrl FearGUI::FGTextList " @
	"METextEdit MEButton";

//
// Load/save GUI editor itself
//

function GuiEditor::loadEditor() {
	GuiLoadContentCtrl($MainWindow, "temp\\GuiEditor.gui");
	GuiEditMode($MainWindow);

	newObject(ToolTrayWindow, SimGui::Canvas, "GUI Editor Tools", 160, 480, True);
	GuiLoadContentCtrl(ToolTrayWindow, "temp\\guiEditorToolTray.gui");
	windowsKeyboardEnable(ToolTrayWindow);
	windowsMouseEnable(ToolTrayWindow);
	cursorOn(ToolTrayWindow);

	GuiEditor::updateEditModeButton();
	Control::setValue(GUIFileField, "");
}

function GuiEditor::saveEditor() {
	GuiSaveContentCtrl(ToolTrayWindow, "temp\\guiEditorToolTray.gui");
}

function GuiEditor::editEditor() {
	GuiEditMode(ToolTrayWindow);
	GuiInspect(ToolTrayWindow);
	GuiEditor::openTree();
	simTreeAddSet(guiEditorTree, "GuiEditorToolTrayGui");
}

//
// Load/save a new GUI project
//

function GuiEditor::newGUI(%guiName, %compType) {
	while ((%obj = Group::getObject("GuiEditorGui", 0)) != -1) deleteObject(%obj);

	%gui = newObject(%guiName @ "Gui", %compType);
	if (%gui == 0) return false;
	
	addToSet("GuiEditorGui", %gui);
	return true;
}

function GuiEditor::loadGUI(%file) {
	while ((%obj = Group::getObject("GuiEditorGui", 0)) != -1) deleteObject(%obj);

	%guiName = File::getBase(%file);
	%gui = loadObject(%guiName @ "Gui", %file);
	if (%gui == 0) return false;

	addToSet("GuiEditorGui", %gui);
	return true;
}

function GuiEditor::saveGUI(%file) {
	if ((%gui = Group::getObject("GuiEditorGui", 0)) == 0) return false;
	echo("Saving GUI to " @ %file);

	$ConsoleWorld::DefaultSearchPath = $ConsoleWorld::DefaultSearchPath;

	storeObject(%gui, %file, true);
	return true;
}

//
// GUI editor functionality (wiring to editor buttons, etc. in next section)
//

function GuiEditor::openTree() {
	if (isObject(guiEditorTree)) return;

	simTreeCreate(guiEditorTree, ToolTrayWindow);
	simTreeAddSet(guiEditorTree, "GuiEditorGui");
}

function GuiEditor::openInspector() {
	GuiInspect($MainWindow);
}

function GuiEditor::toggleEditMode() {
	GuiEditMode($MainWindow);
	GuiEditor::updateEditModeButton();
}

function GuiEditor::initCreateList() {
	TextList::clear(GUICreateList);
	for (%i = 0; (%ctrl = getWord($GuiEditor::allControls, %i)) != -1; %i++)
		TextList::addLine(GUICreateList, %ctrl);
	FGTextList::sort(GUICreateList);
}

function GuiEditor::createControl(%className) {
	%gui = Group::getObject("GuiEditorGui", 0);
	if (%gui == -1) %gui = GuiEditorGui;
	
	%ctrl = Control::getValue(GUICreateList);
	if (%ctrl == "") return;

	GuiEditor::newControl(%gui, "", %ctrl);
}

function GuiEditor::newControl(%parent, %name, %className, %pos, %extent) {
	%pos = def(%pos, "0 0");
	%extent = def(%extent, "64 64");
	%name = def(%name, "Control" @ $GuiEditor::lastControlID++); // we *must* have a real name, because Control::* only accept names, not IDs
		
	%x = newObject(%name, %className);
	Control::setPosition(%name, getWord(%pos, 0), getWord(%pos, 1));
	Control::setExtent(%name, getWord(%extent, 0), getWord(%extent, 1));
	
	if (%className == "FearGui::FGTextList") { // special stupid bug: list must not be blank or Tribes crashes...
		TextList::addLine(%name, "entry");
		Control::setValue(%name, "entry");
	}
	
	addToSet(%parent, %x);
	GuiSetSelection($MainWindow, %x);
	return %x;
}

//
// GUI controls in editor window
//

function GuiEditor::updateEditModeButton() {
	Control::setText(GUIEditModeButton, tern(isObject(EditControl), "Enter GUI mode", "Enter EDIT mode"));
}

function GuiEditor::errorButton(%btn, %errmsg) {
	%oldmsg = Control::getText(%btn);
	if (%oldmsg == "") return;
	
	Control::setActive(%btn, false); Control::setText(%btn, %errmsg);
	schedule("Control::setText(\"" @ %btn @ "\", \"" @ %oldmsg @ "\"); Control::setActive(\"" @ %btn @ "\", true);", 3);
}

function GUINewButton::onAction() {
	%name = def(Control::getValue(GUIFileField), "New");
	%ctrl = def(Control::getValue(GUICreateList), "FearGUI::FGBitmapCtrl");
	GuiEditor::newGUI(%name, %ctrl);
}

function GUILoadButton::onAction() {
	%file = Control::getValue(GUIFileField);
	if (!GuiEditor::loadGUI("temp\\" @ %file))
		GuiEditor::errorButton(GUILoadButton, "NOTFOUND");
}

function GUISaveButton::onAction() {
	%file = Control::getValue(GUIFileField);
	GuiEditor::saveGUI("temp\\" @ %file);
}

function GUIEditModeButton::onAction() {
	GuiEditor::toggleEditMode();
}

function GUIInspectorButton::onAction() {
	GuiEditor::openInspector();
}

function GUITreeButton::onAction() {
	GuiEditor::openTree();
}

function GUICreateList::onAdd() {
	GuiEditor::initCreateList();
}

function GUICreateButton::onAction() {
	if ((%ctrl = Control::getValue(GUICreateList)) == "") return;
	GuiEditor::createControl();
}
